version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: realestate_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-realestate}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - realestate_network

  # Redis for Session Storage and Socket.IO scaling
  redis:
    image: redis:7-alpine
    container_name: realestate_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-password}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - realestate_network

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SENTRY_ORG: ${SENTRY_ORG}
        SENTRY_PROJECT: ${SENTRY_PROJECT}
        SENTRY_AUTH_TOKEN: ${SENTRY_AUTH_TOKEN}
        NEXT_PUBLIC_SENTRY_DSN: ${NEXT_PUBLIC_SENTRY_DSN}
    container_name: realestate_app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-realestate}
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:5544}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      REDIS_URL: redis://:${REDIS_PASSWORD:-password}@redis:6379
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      EMAIL_FROM: ${EMAIL_FROM}
      # Sentry Configuration
      SENTRY_DSN: ${SENTRY_DSN}
      NEXT_PUBLIC_SENTRY_DSN: ${NEXT_PUBLIC_SENTRY_DSN}
      SENTRY_ORG: ${SENTRY_ORG}
      SENTRY_PROJECT: ${SENTRY_PROJECT}
      SENTRY_AUTH_TOKEN: ${SENTRY_AUTH_TOKEN}
      SENTRY_ENVIRONMENT: ${SENTRY_ENVIRONMENT:-production}
    ports:
      - "5544:5544"
    depends_on:
      - postgres
      - redis
    volumes:
      - app_uploads:/app/public/uploads
    networks:
      - realestate_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: realestate_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - realestate_network

volumes:
  postgres_data:
  redis_data:
  app_uploads:

networks:
  realestate_network:
    driver: bridge
